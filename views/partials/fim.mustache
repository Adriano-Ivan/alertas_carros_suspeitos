    </section>
    <div class='relogio-area'></div>
    <script src="http://localhost:{{porta}}/public/jquery/jquery-3.6.0.min.js"></script>
    <script src="http://localhost:{{porta}}/public/bootstrap_js/bootstrap.bundle.min.js"></script>
    <script>
      // Mostrar e esconder os submenus
      const lista_titulos = document.querySelectorAll(".lista-titulo");
      lista_titulos.forEach((titulo) =>
        titulo.addEventListener("click", (event) => {
          //console.log(event.target);
          if (event.target.nextElementSibling.classList.contains("sublista")) {
            event.target.nextElementSibling.classList.toggle("desaparecer");
          }
        })
      );
      const relogio_area = document.querySelector('.relogio-area');

      const showHours = () =>{
        const d = new Date();
        const hour = `${String(d.getHours()).padStart(2, '0')}`;
        const minutes = `${String(d.getMinutes()).padStart(2,'0')}`;
        const seconds = `${String(d.getSeconds()).padStart(2,'0')}`
        relogio_area.textContent=`${hour}:${minutes}:${seconds}`;
      }
      showHours();
      setInterval(showHours,1000);

      const descricoes_aviso = document.querySelectorAll('.descricao-aviso-recebido');

      descricoes_aviso.forEach(aviso =>{
        
        const lista = document.createElement('ul');
       //console.log('EITAAAAAAAAAAAAAA')
        
        const elementos = aviso.textContent.trim().split('|||');
        aviso.textContent='';
        //console.log(elementos);
        //console.log('EI');
        elementos.forEach((e,i) =>{
          
          const alerta = e.trim().split('-b-');
          // console.log('EITAAAAAAAAAAAAAA 22222222')
          alerta.forEach((e2,i2)=>{
            //console.log(e2)
            const sublista = document.createElement('ul');
           if( e2.toLowerCase() === 'alerta:'){
            console.log(e);
            const item = document.createElement('li');
            item.textContent=e2.toUpperCase();
            lista.appendChild(item);
          } else {
            const item = document.createElement('li');
            item.textContent=e2;
            sublista.appendChild(item);
            lista.appendChild(sublista);
          }
          })
          
        });
        
        aviso.appendChild(lista);
        //aviso.textContent = aviso.textContent.replace(/\-b-/g,'\n');
        //console.log(aviso.textContent)
      })

    </script>
    <script src='http://localhost:{{porta}}/public/sweetalert2/dist/sweetalert2.min.js'></script>
   
    {{#retorno_relatorio_valido_alerta}}
    <script>
      function disp() {
        Swal.fire({icon:'info', title:'Atenção',titleText:'Há casos que necessitam da sua atenção ! Por favor, verifique o relatório na página inicial e a aba de alertas !',showCloseButton:true});
      }
      disp();
    </script>
    {{/retorno_relatorio_valido_alerta}}

    {{#placa_errada}}
    <script>
          
          function disp() {
            Swal.fire({icon:'alert', title:'Atenção',titleText:'O padrão da placa está errado ! Por favor, verifique novamente os dados.',showCloseButton:true});
          }
        disp();
    </script>
    {{/placa_errada}}

    {{#sucesso}}
         <script>  
          function disp() {
            Swal.fire({icon:'success',titleText:'Operação feita com sucesso !',showCloseButton:true});
          }
          disp();
          </script>
    {{/sucesso}}

    {{#enviado}}
        <script>
          function disp() {
            Swal.fire({icon:'success',titleText:'Email enviado com sucesso !',showCloseButton:true});
          }
          disp();
        </script>
    {{/enviado}}
    {{#excluido}}
        <script>
          function disp() {
            Swal.fire({icon:'success',titleText:'O email foi excluído da listagem !',showCloseButton:true});
          }
          disp();
        </script>
    {{/excluido}}

    {{#email_duplicado}}
        <script>
function disp() {
            Swal.fire({icon:'alert',titleText:'Email duplicado ! Por favor, registre outro !',showCloseButton:true});
          }
        disp();
        </script>
    {{/email_duplicado}}

    {{#senhas_diferentes}}
        <script>
        function disp() {
            Swal.fire({icon:'alert',titleText:'A confirmação da senha difere da senha ! Por favor, tente novamente',showCloseButton:true});
          }
        disp();
        </script>
    {{/senhas_diferentes}}

    {{#usuario_adicionado}}
        <script>
        function disp() {
            Swal.fire({icon:'success',titleText:'Usuário {{nome_usuario}} adicionado !',showCloseButton:true});
          }
        disp();
        </script>

    {{/usuario_adicionado}}

    {{#usuario_deletado}}
        <script>
        function disp() {
            Swal.fire({icon:'success',titleText:'Usuário {{nome_deletado}} deletado !',showCloseButton:true});
          }
        disp();
        </script>

    {{/usuario_deletado}}

    {{#update_proibido}}
        <script>
        function disp() {
            Swal.fire({icon:'alert',titleText:'Não é permitida a alteração de um usuário ADM !',showCloseButton:true});
          }
        disp();
        </script>
    {{/update_proibido}}

    {{#delete_proibido}}
        <script>
          function disp() {
            Swal.fire({icon:'alert',titleText:'Não é permitida a exclusão de um usuário ADM !',showCloseButton:true});
          }
          disp();
        </script>
    {{/delete_proibido}}

    {{#erro_zona}}
    <script>
      function disp() {
        Swal.fire({icon:'alert',titleText:'A zona em questão está ativa, portanto não pode ser excluída !',showCloseButton:true});
      }
      disp();
    </script>
    {{/erro_zona}}

    <script src='./../../socket.io/socket.io.js'></script>
    <script>
          const socket = io();
          const id_zona =parseInt( `{{id_zona}}`);
          const id_usuario_ref =parseInt(`{{id_usuario_ref}}`);
          let intAuxiliar = 1;
          let numero_envios = 0;
          
          const emitter = function () {
              socket.emit("request_alert", true);
          };

          const regularEmitter = setInterval(emitter, 350);
         
          const emitPopUp = async(desc)=>{
            numero_envios++;
            if(numero_envios===1){
              Swal.fire({html:`<h2>Novos casos que demandam sua atenção</h2><p style='text-align:center'>${desc}</p>`,showCloseButton:true});
            console.log(numero_envios);
           
            }
            
          }
          const emitToBackEnd =async(objeto_para_telegram,id_zona,stringToDataBase)=>{
            
            if(numero_envios===1){
              socket.emit('numero_envios',{numero_envios,objeto_para_telegram,id_zona});
            //await socket.emit('send_object_for_telegram',[objeto_para_telegram,id_zona]);
            socket.emit('send_message',stringToDataBase);
            }
          
          }
          const processData = async(alerts,objeto_para_telegram,stringToDataBase)=>{
            let desc = `<div class='alerta-aviso' style='max-height:45vh; overflow-y:scroll'>`;
            let auxiliarBoolean = false;
           
            alerts.forEach((a) => {
              if(a.id_zona===id_zona){
                auxiliarBoolean=true;
                objeto_para_telegram.push({id:a.id,placa:a.placa,hora:a.hora,data:a.data,local_alerta: a.local_alerta, tipo:a.tipo, id_zona: parseInt(a.id_zona)});
                stringToDataBase += `Alerta:-b-Placa: ${a.placa.toUpperCase()}-b-Momento: ${a.data}, ${a.hora}-b-Local: ${a.local_alerta}-b-Caso: ${a.tipo}|||`;
                desc += `-> Placa:${a.placa.toUpperCase()} <span style='color:red'>| </span> Momento: ${a.data}, ${a.hora} <span style='color:red'>| </span> Local: ${a.local_alerta} <span style='color:red'>| </span> Caso: ${a.tipo}<hr><br>`
              }
            
              //alert(`Placa: ${a.placa.toUpperCase()} - Mais informações na aba de alertas`)
            });
            console.log(auxiliarBoolean, intAuxiliar);
            if(auxiliarBoolean && intAuxiliar===1 ){
              intAuxiliar++;
              
              desc += '<br>Mais informações na aba de alertas !<br>';
            desc+='</div>';
            await emitPopUp(desc);
            await emitToBackEnd(objeto_para_telegram,id_zona,stringToDataBase);
            }

          }

          socket.on("send_alerts", async(alerts) => {
            let  objeto_para_telegram=[];
              let  stringToDataBase='';

            if (alerts !== null) {
              intAuxiliar=1;
                await socket.emit('flag_connect',id_usuario_ref);
              //clearInterval(regularEmitter);
              //socket.emit('send_control_id',id_usuario_ref);
              await processData(alerts,objeto_para_telegram,stringToDataBase);
              
             
            }
           
          });
          console.log('AUX:'+intAuxiliar)
          socket.on('conf_update',(bool)=>{
            if(bool){
              console.log('ENNNNNNN')
              numero_envios=0;
             intAuxiliar=1;
            }
          })
          socket.on('connect',()=>{
            console.log('CONNECT');
            socket.emit('flag_connect',id_usuario_ref);
          })
          // socket.on('disconnect',()=>{
          //   console.log('DISCONNECT')
          // })
        
    </script>
  </body>
</html>
